// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package message

import (
	"context"

	"jt-chat/apps/message/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DownloadFileIn        = pb.DownloadFileIn
	DownloadFileOut       = pb.DownloadFileOut
	GetNextMsgListIn      = pb.GetNextMsgListIn
	GetNextMsgListOut     = pb.GetNextMsgListOut
	GetPreviousMsgListIn  = pb.GetPreviousMsgListIn
	GetPreviousMsgListOut = pb.GetPreviousMsgListOut
	Message               = pb.Message
	SaveMsgIn             = pb.SaveMsgIn
	SaveMsgOut            = pb.SaveMsgOut
	UploadFileIn          = pb.UploadFileIn
	UploadFileOut         = pb.UploadFileOut

	MessageZrpcClient interface {
		SaveMsg(ctx context.Context, in *SaveMsgIn, opts ...grpc.CallOption) (*SaveMsgOut, error)
		GetNextMsgList(ctx context.Context, in *GetNextMsgListIn, opts ...grpc.CallOption) (*GetNextMsgListOut, error)
		GetPreviousMsgList(ctx context.Context, in *GetPreviousMsgListIn, opts ...grpc.CallOption) (*GetPreviousMsgListOut, error)
		DownloadFile(ctx context.Context, in *DownloadFileIn, opts ...grpc.CallOption) (*DownloadFileOut, error)
		UploadFile(ctx context.Context, in *UploadFileIn, opts ...grpc.CallOption) (*UploadFileOut, error)
	}

	defaultMessageZrpcClient struct {
		cli zrpc.Client
	}
)

func NewMessageZrpcClient(cli zrpc.Client) MessageZrpcClient {
	return &defaultMessageZrpcClient{
		cli: cli,
	}
}

func (m *defaultMessageZrpcClient) SaveMsg(ctx context.Context, in *SaveMsgIn, opts ...grpc.CallOption) (*SaveMsgOut, error) {
	client := pb.NewMessageClient(m.cli.Conn())
	return client.SaveMsg(ctx, in, opts...)
}

func (m *defaultMessageZrpcClient) GetNextMsgList(ctx context.Context, in *GetNextMsgListIn, opts ...grpc.CallOption) (*GetNextMsgListOut, error) {
	client := pb.NewMessageClient(m.cli.Conn())
	return client.GetNextMsgList(ctx, in, opts...)
}

func (m *defaultMessageZrpcClient) GetPreviousMsgList(ctx context.Context, in *GetPreviousMsgListIn, opts ...grpc.CallOption) (*GetPreviousMsgListOut, error) {
	client := pb.NewMessageClient(m.cli.Conn())
	return client.GetPreviousMsgList(ctx, in, opts...)
}

func (m *defaultMessageZrpcClient) DownloadFile(ctx context.Context, in *DownloadFileIn, opts ...grpc.CallOption) (*DownloadFileOut, error) {
	client := pb.NewMessageClient(m.cli.Conn())
	return client.DownloadFile(ctx, in, opts...)
}

func (m *defaultMessageZrpcClient) UploadFile(ctx context.Context, in *UploadFileIn, opts ...grpc.CallOption) (*UploadFileOut, error) {
	client := pb.NewMessageClient(m.cli.Conn())
	return client.UploadFile(ctx, in, opts...)
}
