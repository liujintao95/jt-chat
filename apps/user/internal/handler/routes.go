// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	auth "jt-chat/apps/user/internal/handler/auth"
	contact "jt-chat/apps/user/internal/handler/contact"
	group "jt-chat/apps/user/internal/handler/group"
	user "jt-chat/apps/user/internal/handler/user"
	"jt-chat/apps/user/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: auth.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: auth.RegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create_contact_application",
				Handler: contact.CreateContactApplicationHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete_contact",
				Handler: contact.DeleteContactHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/get_contact_application_list",
				Handler: contact.GetContactApplicationListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/get_contact_list",
				Handler: contact.GetContactListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/get_group_contact_application_list",
				Handler: contact.GetGroupContactApplicationListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update_contact_application",
				Handler: contact.UpdateContactApplicationHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/v1/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create_group",
				Handler: group.CreateGroupHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete_group",
				Handler: group.DeleteGroupHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete_user_group_map",
				Handler: group.DeleteUserGroupMapHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update_group",
				Handler: group.UpdateGroupHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/v1/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/get_list",
				Handler: user.GetListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: user.UpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/v1/user"),
	)
}
